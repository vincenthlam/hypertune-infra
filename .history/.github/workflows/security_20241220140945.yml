name: 'Infrastructure Security'

on:
  schedule:
    - cron: '0 0 * * *'  # Daily at midnight
  pull_request:
    paths:
      - 'terraform/**'
      - 'config/**'
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to secure (dev or prod)"
        required: true
        default: "dev"

jobs:
  tfsec:
    name: 'TFSec Scan'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Run TFSec
        uses: aquasecurity/tfsec-action@v1.0.0
        with:
          working_directory: terraform
          format: sarif
          out: tfsec.sarif

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: tfsec.sarif

  checkov:
    name: 'Checkov Scan'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Run Checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: terraform
          output_format: sarif
          output_file_path: checkov.sarif

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: checkov.sarif

  aggregate-results:
    name: 'Aggregate Security Results'
    runs-on: ubuntu-latest
    needs: [tfsec, checkov]
    steps:
      - uses: actions/checkout@v4

      - name: Aggregate Results
        run: python3 scripts/security/aggregate_results.py \
              --tfsec tfsec.sarif \
              --checkov checkov.sarif \
              --output aggregated_results.json

      - name: Upload Aggregated Results
        uses: actions/upload-artifact@v3
        with:
          name: security-report
          path: aggregated_results.json

      - name: Notify on Security Issues
        if: ${{ failure() }}
        uses: ravsamhq/notify-slack-action@v2
        with:
          status: failure
          notification_title: "Security Alert"
          message_format: "ðŸš¨ Security Issues Detected! Check the report for details."
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}